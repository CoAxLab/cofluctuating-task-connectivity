
<<include ideogram.conf>>

chromosomes_units = 100
<<include ticks.conf>>

<image>
angle_offset* = -87
<<include etc/image.conf>>
dir* = output
file* = circus_stroop.png
</image>

### single genomes

karyotype = data/segments_shen.txt

#<<include segment.order.conf>>

#chromosomes_reverse = /.*-l/

###
# HEATMAPS
# If you aren't using heatmaps in your image (you have no measures associated with
# parcelation regions), remove this section. Also turn of grids in etc/ticks.conf.

hm_r      = 0.96
hm_w      = 0.025
hm_pad    = 0.005

#hm_colors = greys-4-seq,greys-4-seq,greys-4-seq,greys-4-seq,greys-4-seq
#hm_colors = reds-4-seq,oranges-4-seq,greens-4-seq,blues-4-seq,purples-4-seq

# HEATMAPS
###

<plots>

# Two heatmaps, one for positive and another one for negative values
<plot>
type = heatmap
file = data/heatmap_stroop.txt
min = 0
max = 1
color = reds-9-seq
r1    = 0.99r
r0    = 0.93r
stroke_color = white
stroke_thickness = 3

<rules>
<rule>
condition  = var(value) == 0
color = white
</rule>
</rules>
</plot>

# Add a heatmap
<plot>
type = heatmap
file = data/heatmap_stroop.txt
min = -1
max = 0
color = blues-9-seq-rev
r1    = 0.99r
r0    = 0.93r
stroke_color = white
stroke_thickness = 3

# This rule is to not overwrite the previous positive heatmaps
<rules>
<rule>
condition  = var(value) > 0
show = no
</rule>
</rules>
</plot>

<plot>
type = histogram
file = data/histo_stroop.txt
fill_color = black
color = black
orientation = out
r1 = 0.92r
r0 = 0.75r
thickness = 5
</plot>


<plot>
type       = text
file       = data/segments_shen_labels.txt
color      = black
label_font = default
label_size = 20
r0         = 1r
r1         = 1.5r
rpadding   = 10p
</plot>

</plots>

<links>
<link>
file          = data/links_stroop.txt

# If you don't have heatmaps, change radius to
# radius = dims(ideogram,radius_inner) 
radius        = 0.75r # eval(sprintf("%fr",conf(hm_r)-counter(heatmap)*(conf(hm_w)+conf(hm_pad))+conf(hm_w)))
bezier_radius = 0r
bezier_radius_purity = 0.5
crest         = 0.25
thickness     = 2

<rules>
<rule>
condition = var(type)==1
color     = eval(sprintf("ylorrd-9-seq-%d",remap_int(var(score),0,1,1,9)))
thickness = eval(remap_int(var(score),0,1,1,20))
</rule>
<rule>
condition = var(type)==0
color     = eval(sprintf("ylgnbu-9-seq-%d",remap_int(var(score),0,1,1,9)))
thickness = eval(remap_int(var(score),0,1,1,20))
</rule>
</rules>
</link>
</links>

<<include etc/colors_fonts_patterns.conf>>
<colors>
<<include shen_colors.conf>>
</colors>

restrict_parameter_names* = no
<<include etc/housekeeping.conf>>



